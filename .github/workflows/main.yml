- name: Generate Random Password & Set Root
  id: passwd
  run: |
    PASS=$(openssl rand -base64 12)
    echo "root:$PASS" | sudo chpasswd
    echo "PASSWORD=$PASS" >> $GITHUB_ENV
    echo "🔑 Generated random root password"

- name: Install Dependencies
  run: |
    sudo apt update -y
    sudo apt install -y openssh-server ufw curl wget jq unzip nginx
    sudo ufw allow 22,443/tcp
    sudo ufw --force enable
    sudo service ssh restart
    echo "✅ Dependencies & security configured"

- name: Install Xray
  run: |
    XRAY_VERSION=$(curl -s "https://api.github.com/repos/XTLS/Xray-core/releases/latest" | jq -r '.tag_name')
    wget -q "https://github.com/XTLS/Xray-core/releases/download/$XRAY_VERSION/Xray-linux-64.zip"
    sudo unzip -o Xray-linux-64.zip -d /usr/local/bin/
    sudo mkdir -p /usr/local/etc/xray/
    echo '{ "inbounds": [ { "port": 443, "protocol": "vless", "settings": { "clients": [ { "id": "79e26e20-56b3-4f1e-8484-9844e13d11b2" } ] }, "streamSettings": { "network": "ws", "security": "none", "wsSettings": { "path": "/vless-archfx" } } } ], "outbounds": [ { "protocol": "freedom" } ] }' | sudo tee /usr/local/etc/xray/config.json
    sudo nohup /usr/local/bin/xray run -config /usr/local/etc/xray/config.json > xray.log 2>&1 &
    echo "✅ Xray is running"

- name: Install and Run RS-Tunnel
  run: |
    curl -sL "https://github.com/radovsky/r-tunnel/releases/download/v1.1.2/r-tunnel_linux_amd64" -o r-tunnel
    chmod +x r-tunnel
    nohup ./r-tunnel tunnel --host=r.tunnel.workers.dev --remote-port=443 --local-port=443 > r-tunnel.log 2>&1 &
    echo "⏳ Waiting 45 seconds for RS-Tunnel..."
    sleep 45
    cat r-tunnel.log

- name: Get RS-Tunnel Address
  id: tunnel_info
  run: |
    TUNNEL_ADDRESS=$(grep -o "http[s]*://[^ ]*\.r\.tunnel\.workers\.dev" r-tunnel.log | head -n 1)
    if [ -z "$TUNNEL_ADDRESS" ]; then
       VLESS_ADDR="rs-tunnel-failed"
    else
       VLESS_ADDR=${TUNNEL_ADDRESS#*//}
    fi
    echo "VLESS_ADDR=$VLESS_ADDR" >> $GITHUB_ENV
    echo "🔥 RS-Tunnel: $VLESS_ADDR"

- name: Save Credentials
  run: |
    echo "VLESS Address: ${{ env.VLESS_ADDR }}" > vps-info.txt
    echo "Port: 443" >> vps-info.txt
    echo "User: root" >> vps-info.txt
    echo "Pass: ${{ env.PASSWORD }}" >> vps-info.txt

- name: Upload Info
  uses: actions/upload-artifact@v4
  with:
    name: vps-info
    path: vps-info.txt

- name: Keep VPS Alive
  run: |
    timeout 6h bash -c 'while true; do echo "[$(date)] VPS running..."; sleep 300; done'
